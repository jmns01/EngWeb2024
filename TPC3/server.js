var http = require('http')
var fs = require('fs')
var url = require('url')
var axios = require('axios')

function generate_movies(filmes){
    html_page=`
    <!DOCTYPE html>
    <html>
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Filmes Americanos</title>
        <link rel="stylesheet" href="w3.css"/>
    </head>
    <body>
        <div class="w3-card-4">

            <header class="w3-container w3-blue">
                <h1>Lista de Filmes</h1>
            </header>
            
            <div class="w3-container">
                <ul class="w3-ul w3-hoverable">
    `
    filmes.forEach(filme => {
        html_page +=`
        <li><a href='movies/${filme.id}'>${filme.title}</a></li>`
    });

    html_page += `
        </ul>
            </div>
            
            <footer class="w3-container w3-blue">
                <h5>Generated by EngWeb2024 TPC3</h5>
            </footer>
            
        </div>
    </body>
    </html>
    `

    return html_page;
}

function generate_movie_page(filme){
    axios.get('http://localhost:3000/cast')
        .then(function(resp){
            cast = resp.data;
        })
        .catch(function(erro){
            fs.readFile('erro.html', function(erro, dados){
                console.log('Erro ao ler cast dentro do generate_movie_pages()')
                return dados;
            })
        })
    axios.get('http://localhost:3000/genres')
        .then(function(resp){
            genres = resp.data;
        })
        .catch(function(erro){
            fs.readFile('erro.html', function(erro, dados){
                console.log('Erro ao ler genres dentro do generate_movie_pages()')
                return dados;
            })
        })

    pag=`
        <!DOCTYPE html>
        <html>
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Filmes Americanos</title>
            <link rel="stylesheet" href="w3.css"/>
        </head>
        <body>
            <div class="w3-card-4">
        
                <header class="w3-container w3-blue">
                    <h1>Filme</h1>
                </header>
                
                <div class="w3-container">
                    <ul class="w3-ul w3-border">
                        <li><h2>Nome</h2></li>
                        <li>${filme.title}</li>
                        <li><h2>Ano de Lançamento</h2></li>
                        <li>${filme.year}</li>
                        <li><h2>Cast</h2></li>
        `
        if(filme.cast.length > 0){
            filme.cast.forEach(ator =>{
                cast.forEach(atorElem =>{
                    if(ator == atorElem.name){
                        pag += `<li><a href='/cast/${atorElem.id}'>${ator}</a></li>`
                    }
                });
            });
        }else {pag+=`<li>Não existe cast</li>`}
        
        pag += `<li><h2>Géneros</h2></li>`

        if(filme.genres.length > 0){
            filme.genres.forEach(genre =>{
                genres.forEach(genreElem =>{
                    if(genre == genreElem.name){
                        pag += `<li><a href='genres/${genreElem.id}'>${genre}</a></li>`
                    }
                });
            });
        }else {pag+=`<li>Não existe géneros</li>`}
        
        pag += `
            </ul>
            </div>
            
            <footer class="w3-container w3-blue">
                <h5>Generated by EngWeb2024 TPC3</h5>
            </footer>
            
        </div>
        </body>
        </html>
        `
        return pag;
}

function generate_cast(cast){
    pag = `
        <!DOCTYPE html>
        <html>
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Filmes Americanos</title>
            <link rel="stylesheet" href="w3.css"/>
        </head>
        <body>
            <div class="w3-card-4">

                <header class="w3-container w3-blue">
                    <h1>Lista de Atores e Atrizes</h1>
                </header>
                
                <div class="w3-container">
                    <ul class="w3-ul w3-hoverable">
    `

    cast.forEach(ator =>{
        pag += `<li><a href='/cast/${ator.id}'>${ator.name}</a></li>`
    });

    pag += `
            </ul>
            </div>
            
            <footer class="w3-container w3-blue">
                <h5>Generated by EngWeb2024 TPC3</h5>
            </footer>
            
        </div>
        </body>
        </html>
    `

    return pag;
}

function generate_cast_page(ator){
    axios.get('http://localhost:3000/movies')
        .then(function(resp){
            moviesData = resp.data;
        })
        .catch(function(erro){
            fs.readFile('erro.html', function(erro, dados){
                console.log('Erro ao ler movies dentro do generate_cast_page()')
                return dados;
            })
        })

    page = `
    <!DOCTYPE html>
    <html>
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Filmes Americanos</title>
        <link rel="stylesheet" href="w3.css"/>
    </head>
    <body>
        <div class="w3-card-4">
    
            <header class="w3-container w3-blue">
                <h1>Ator</h1>
            </header>
            
            <div class="w3-container">
                <ul class="w3-ul w3-border">
                    <li><h2>Nome</h2></li>
                    <li>${ator.name}</li>
                    <li><h2>Filmes em que esteve</h2></li>
    `
    ator.in_movies.forEach(a => {
        moviesData.forEach(mov =>{
            if(a == mov.title){
                page += `<li><a href='/movies/${mov.id}'>${a}</a></li>` 
            }
        });
    });

    page += `
        </ul>
            </div>
            
            <footer class="w3-container w3-blue">
                <h5>Generated by EngWeb2024 TPC3</h5>
            </footer>
            
    </div>
    </body>
    </html>
    `

    return page;
}

function generate_genres(genres){
    page = `
    <!DOCTYPE html>
    <html>
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Filmes Americanos</title>
        <link rel="stylesheet" href="w3.css"/>
    </head>
    <body>
        <div class="w3-card-4">

            <header class="w3-container w3-blue">
                <h1>Lista de Géneros</h1>
            </header>
            
            <div class="w3-container">
                <ul class="w3-ul w3-hoverable">
    `

    genres.forEach(genre => {
        page += `<li><a href='genres/${genre.id}'>${genre.name}</a></li>`
    });

    page +=`
        </ul>
            </div>
            
            <footer class="w3-container w3-blue">
                <h5>Generated by EngWeb2024 TPC3</h5>
            </footer>
            
        </div>
    </body>
    </html>
    `
    return page;
}

function generate_genre_page(genre){
    axios.get('http://localhost:3000/movies')
    .then(function(resp){
        moviesData = resp.data;
    })
    .catch(function(erro){
        fs.readFile('erro.html', function(erro, dados){
            console.log('Erro ao ler movies dentro do generate_genre_page()')
            return dados;
        })
    })

    html=`
    <!DOCTYPE html>
    <html>
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Filmes Americanos</title>
        <link rel="stylesheet" href="w3.css"/>
    </head>
    <body>
        <div class="w3-card-4">

            <header class="w3-container w3-blue">
                <h1>Género</h1>
            </header>
            
            <div class="w3-container">
                <ul class="w3-ul w3-border">
                <li><h2>Nome</h2></li>
                <li>${genre.name}</li>
                <li>Filmes deste género</li>
    `
    genre.movies.forEach(movie =>{
        moviesData.forEach(mov => {
            if(movie == mov.title){
                html += `<li><a href='/movies/${mov.id}'>${movie}</a></li>`
            }
        });
    });
    
    html += `
        </ul>
            </div>
            
            <footer class="w3-container w3-blue">
                <h5>Generated by EngWeb2024 TPC3</h5>
            </footer>
            
        </div>
    </body>
    </html>`
    return html;
}

http.createServer(function (req, res){
    var q = url.parse(req.url, true)
    if(q.pathname.endsWith('/w3.css')){
        fs.readFile('w3.css', function(erro, dados) {
            res.writeHead(200, {'Content-Type': 'text/css'})
            res.write(dados)
            res.end()
        })
    }
    else if(q.pathname == '/'){
        fs.readFile('index.html', function(erro, dados){
            res.writeHead(200, {'Content-Type': 'text/html'})
            res.write(dados)
            res.end()
        }) 
    }
    else if(q.pathname == '/movies'){
        axios.get('http://localhost:3000/movies',)
        .then(function(resp){
            dados = resp.data;
            pag = generate_movies(dados);
            res.writeHead(200, {'Content-Type': 'text/html'})
            res.write(pag)
            res.end()
        })
        .catch(function(erro){
            fs.readFile('erro.html', function(erro, dados){
                console.log('Erro ao ler movies')
                res.writeHead(500, {'Content-Type': 'text/html'})
                res.write(dados)
                res.end()
            })
        })
    }
    else if(q.pathname.startsWith('/movies/')){
        var id = q.pathname.split('/')[2];
        axios.get(`http://localhost:3000/movies/${id}`)
        .then(function(resp){
            dados = resp.data;
            pag = generate_movie_page(dados);
            res.writeHead(200, {'Content-Type': 'text/html'});
            res.write(pag);
            res.end();
        })
        .catch(function(erro){
            fs.readFile('erro.html', function(erro, dados){
                console.log('Erro ao ler um filme especifico')
                res.writeHead(500, {'Content-Type': 'text/html'})
                res.write(dados)
                res.end()
            })
        })
    }
    else if(q.pathname == '/cast'){
        axios.get('http://localhost:3000/cast')
        .then(function(resp) {
            dados = resp.data;
            html = generate_cast(dados);
            res.writeHead(200, {'Content-Type': 'text/html'})
            res.write(html)
            res.end()
        })
        .catch(function(erro){
            fs.readFile('erro.html', function(erro, dados){
                console.log('Erro ao ler os casts')
                res.writeHead(500, {'Content-Type': 'text/html'})
                res.write(dados)
                res.end()
            })
        })
    }
    else if(q.pathname.startsWith('/cast/')){
        var cast_id = q.pathname.split('/')[2]
        axios.get(`http://localhost:3000/cast/${cast_id}`)
        .then(function(resp){
            dados = resp.data;
            page = generate_cast_page(dados);
            res.writeHead(200, {'Content-Type': 'text/html'})
            res.write(page)
            res.end()
        })
        .catch(function(erro){
            fs.readFile('erro.html', function(erro, dados){
                console.log('Erro ao ler um cast especifico')
                res.writeHead(500, {'Content-Type': 'text/html'})
                res.write(dados)
                res.end()
            })
        })
    }
    else if(q.pathname == '/genres'){
        axios.get('http://localhost:3000/genres')
        .then(function(resp){
            dados = resp.data;
            page = generate_genres(dados);
            res.writeHead(200, {'Content-Type': 'text/html'})
            res.write(page)
            res.end()
        })
        .catch(function(erro){
            fs.readFile('erro.html', function(erro, dados){
                console.log('Erro ao ler os generos')
                res.writeHead(500, {'Content-Type': 'text/html'})
                res.write(dados)
                res.end()
            })
        })
    }
    else if(q.pathname.startsWith('/genres/')){
        id_genre = q.pathname.split('/')[2]
        axios.get(`http://localhost:3000/genres/${id_genre}`)
        .then(function(resp){
            dados = resp.data;
            page = generate_genre_page(dados);
            res.writeHead(200, {'Content-Type': 'text/html'})
            res.write(page)
            res.end()
        })
        .catch(function(erro){
            fs.readFile('erro.html', function(erro, dados){
                console.log('Erro ao ler um genero especifico')
                res.writeHead(500, {'Content-Type': 'text/html'})
                res.write(dados)
                res.end()
            })
        })
    }
    else{
        res.writeHead(400, {'Content-Type': 'text/html; charset=utf-8'})
        res.write('<p>Erro: pedido não suportado.</p>')
        res.write('<pre>' + q.pathname + '</pre>')
        res.end()
    }
}).listen(7777);